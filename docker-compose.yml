version: "3.7"
services:
    ### Plex ###
    # Media Server
    plex:
        container_name: plex
        image: linuxserver/plex:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        ports:
            # Plex Media Server
            - "6002:32400"
            # Plex DLNA Server
            - "1900:1900/udp"
            - "32469:32469"
            # Plex Home Theater via Plex Companion
            - "3005:3005"
            # Older Bonjour/Avahi network discovery
            #- "5353:5353/udp"
            # Plex for Roku via Plex Companion
            - "8324:8324"
            # GDM network discovery
            - "32469:32469/udp"
            - "32410:32410/udp"
            - "32412:32412/udp"
            - "32413:32413/udp"
            - "32414:32414/udp"
        environment:
            TZ: ${TZ}
            HOSTNAME: "Plex Server"
            VERSION: docker
        volumes:
            - ${USERDIR}/mediaserver/plex/config:/config
            - ${USERDIR}/mediaserver/plex/transcode:/transcode
            - ${USERDIR}/mediaserver/plex/data:/data
            - ${USERDIR}/mediaserver/movies:/movies
            - ${USERDIR}/mediaserver/tv:/tv
        labels:
            com.centurylinklabs.watchtower.enable: "true"
        networks:
            media-server:
                ipv4_address: 172.60.0.2
    
    ### Tautulli ###
    # Plex Monitor
    tautulli:
        container_name: tautulli
        image: linuxserver/tautulli:latest
        restart: unless-stopped
        ports:
            - "6003:8181"
        volumes:
            - ${USERDIR}/mediaserver/tautulli/config:/config
            - ${USERDIR}/mediaserver/tautulli/logs:/logs:ro
            - ${USERDIR}/mediaserver/shared:/shared
        environment:
            UID: ${PUID}
            GID: ${PGID}
            TZ: ${TZ}
        labels:
            com.centurylinklabs.watchtower.enable: "true"
        networks:
            media-server:
                ipv4_address: 172.60.0.3
        
    ### Radarr ###
    # Movie Downloader and Manager
    radarr:
        container_name: radarr
        image: linuxserver/radarr:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        ports:
            - "6004:7878"
        volumes:
            - ${USERDIR}/mediaserver/radarr/config:/config
            - ${USERDIR}/mediaserver/downloads/completed:/completed
            - ${USERDIR}/mediaserver/movies:/movies
            - ${USERDIR}/mediaserver/shared:/shared
        environment:
            TZ: ${TZ}
        labels:
            com.centurylinklabs.watchtower.enable: 'true'
        networks:
            media-server:
                ipv4_address: 172.60.0.4
    ### Sonarr ###
    # Serie Downloader and Manager
    sonarr:
        container_name: sonarr
        image: linuxserver/sonarr:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        ports:
            - "6005:8989"
        volumes:
            - ${USERDIR}/mediaserver/sonarr/config:/config
            - ${USERDIR}/mediaserver/downloads/completed:/completed
            - ${USERDIR}/mediaserver/tv:/tv
            - ${USERDIR}/mediaserver/shared:/shared
        environment:
            TZ: ${TZ}
        labels:
            com.centurylinklabs.watchtower.enable: true
        networks:
            media-server:
                ipv4_address: 172.60.0.5
    
    ### Jackett ###
    # Proxy Server for Sonarr & Radarr search queries
    jackett:
        container_name: jackett
        image: linuxserver/jackett:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        ports:
            - "6006:9117"
        volumes:
            - ${USERDIR}/mediaserver/jackett/config:/config/Jackett
            - ${USERDIR}/mediaserver/downloads/completed:/completed
            - ${USERDIR}/mediaserver/shared:/shared
        environment:
            TZ: ${TZ}
        labels:
            com.centurylinklabs.watchtower.enable: true
        networks:
            media-server:
                ipv4_address: 172.60.0.6
    
    ### Transmission ###
    # Torrent Client with VPN
    transmission:
        container_name: transmission
        image: haugene/transmission-openvpn:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        cap_add:
            - NET_ADMIN
        devices:
            # See (https://www.kernel.org/doc/Documentation/networking/tuntap.txt)
            - /dev/net/tun
        ports:
            # Web UI
            - "6007:9091"
            # Torrent Port
            - "51413:51413"
            - "51413:51413/udp"
        dns:
            - 1.1.1.1
            - 1.0.0.1
        volumes:
            - ${USERDIR}/mediaserver/transmission/config:/config
            - ${USERDIR}/mediaserver/transmission/data:/data
            - ${USERDIR}/mediaserver/downloads/completed:/completed
            - ${USERDIR}/mediaserver/downloads/incomplete:/incomplete
        environment:
            TZ: ${TZ}
            TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
            TRANSMISSION_RPC_HOST_WHITELIST: 127.0.0.1,192.168.*.*
            TRANSMISSION_RPC_USERNAME: ${TORRENT_USERNAME}
            TRANSMISSION_RPC_PASSWORD: ${TORRENT_PASSWORD}
            TRANSMISSION_RATIO_LIMIT_ENABLED: "false"
            TRANSMISSION_RATIO_LIMIT: 2.00
            TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
            TRANSMISSION_INCOMPLETE_DIR: /incomplete
            TRANSMISSION_DOWNLOAD_DIR: /completed
            TRANSMISSION_RENAME_PARTIAL_FILES: "true"
            # This will give the service read and execute permissions within the docker group
            TRANSMISSION_UMASK: 022
            OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
            CREATE_TUN_DEVICE: "true"
            WEBPROXY_ENABLED: "false"
            # Get access to the WebUI without VPN
            LOCAL_NETWORK: 192.168.0.0/24
            # Set these variables to the preferred VPN
            OPENVPN_USERNAME: ${OPENVPN_USERNAME}
            OPENVPN_PASSWORD: ${OPENVPN_PASSWORD}
            # NordVPN specific settings
            OPENVPN_PROVIDER: NORDVPN
            NORDVPN_COUNTRY: CH
            NORDVPN_CATEGORY: P2P
            NORDVPN_PROTOCOL: tcp
        labels:
            com.centurylinklabs.watchtower.enable: true
        networks:
            media-server:
                ipv4_address: 172.60.0.7
        

    ### Deluge ###
    # Torrent Client without VPN
#     deluge:
#         container_name: deluge
#         image: linuxserver/deluge:latest
#         restart: unless-stopped
#        user: "${PUID}:${PGID}"
#         ports:
#             # Web UI
#             - "6007:8112"
#             # Incoming Connections (Used for seeding)
#             - "53160:53160"
#             - "53160:53160/udp"
#             # Daemon remote port (Used for GTK applications)
#             - "58846:58846"
#         volumes:
#             - ${USERDIR}/mediaserver/deluge/config:/config
#             - ${USERDIR}/mediaserver/downloads/completed:/root/Downloads
#             - ${USERDIR}/mediaserver/shared:/shared
#         environment:
#             TZ: ${TZ}
#             DELUGE_LOGLEVEL=error
#         labels:
#             com.centurylinklabs.watchtower.enable: true
#         networks:
#             media-server:
#                 ipv4_address: 172.60.0.7
    
    ### Bazarr ###
    # Subtitles Downloader and Manager
    bazarr:
        container_name: bazarr
        image: linuxserver/bazarr:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        volumes:
            - ${USERDIR}/mediaserver/bazarr/config:/config
            - ${USERDIR}/mediaserver/movies:/movies
            - ${USERDIR}/mediaserver/tv:/tv
        ports:
            - "6008:6767"
        environment:
            TZ: ${TZ}
        networks:
            media-server:
                ipv4_address: 172.60.0.8
    
    ### Watchtower ###
    # Automates Docker Image Updates if `com.centurylinklabs.watchtower.enable=true` label is added
    watchtower:
        container_name: watchtower
        image: v2tec/watchtower:latest
        restart: unless-stopped
        # Update everyday at 4 AM
        command: --schedule "0 0 4 * * *" --cleanup
        # Watch containers where the com.centurylinklabs.watchtower.enable label is set to true
        command: --label-enable
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            TZ: ${TZ}
        networks:
            media-server:
                ipv4_address: 172.60.0.10
    
    ### Portainer ###
    # Web UI for Docker Containers. Usefull for managing the server
    # Not needed if you already have a Portainer installation on your server
    portainer:
        container_name: portainer
        image: portainer/portainer:latest
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        command: -H unix:///var/run/docker.sock
        ports:
            - "9000:9000"
        volumes:
            - ${USERDIR}/mediaserver/portainer/data:/data
            - ${USERDIR}/mediaserver/shared:/shared
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            TZ: ${TZ}
        networks:
            media-server:
                ipv4_address: 172.60.0.9

networks:
    media-server:
        name: media-server
        ipam:
            config:
                - subnet: 172.60.0.0/24
